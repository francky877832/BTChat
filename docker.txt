
docker run -d --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n n8nio/n8n

docker build -t bt-chat-backend . --load
docker compose up --build - rebuild limage

docker-compose up --build [backend] - demare limage, et build si elle nexiste pas, pas de rebuild

docker compose down ---stoppe et supprime tous les conteinaer

istalling a package in the container
docker exec -it btchat-backend sh
docker compose exec backend npm install axios


lancer un docker
cd ml-service
docker build -t btchat-ml .

demarrer limage original tel quelle apre le build
docker run -p 5000:5000 --env-file .env btchat-ml

demarrer limage a jour - (rebuild uniquement si les dependance chanegent)
docker run -p 5000:5000 --env-file .env -v ${PWD}:/app btchat-ml


curl -X POST http://localhost:5000/predict \
     -H "Content-Type: application/json" \
     -d '{"message": "Summarize my documents"}'





lancer tous les dockers
docker compose up --build





n8n
docker stop n8n
docker start n8n
install n8n
docker run -d --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n n8nio/n8n



